{"version":3,"sources":["./src/app/+maintenance-info/maintenance-info.html","../common-angular/src/pipes/capitalize.pipe.ts","../common-angular/src/pipes/number-with-commas.pipe.ts","../common-angular/src/pipes/pipes.module.ts","../common-angular/src/pipes/plural.pipe.ts","../common-angular/src/pipes/replace.pipe.ts","../common-angular/src/pipes/round.pipe.ts","../common-angular/src/pipes/safe.pipe.ts","../common-angular/src/pipes/timing.pipe.ts","./src/app/+maintenance-info/maintenance-info.module.ts","./src/app/+maintenance-info/maintenance-info.ts"],"names":[],"mappings":"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","file":"maintenance-info-maintenance-info-module.js","sourcesContent":["export default \"<div\\n\\t*ngIf=\\\"message\\\"\\n\\tclass=\\\"maintenance-message-container\\\"\\n\\t[innerHTML]=\\\"message | safe: 'html'\\\"\\n></div>\\n\"","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'ngxCapitalize' })\nexport class CapitalizePipe implements PipeTransform {\n\ttransform(input: string): string {\n\t\treturn input && input.length\n\t\t\t? input.charAt(0).toUpperCase() + input.slice(1).toLowerCase()\n\t\t\t: input;\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'myNumberWithCommas' })\nexport class NumberWithCommasPipe implements PipeTransform {\n\ttransform(input: number): string {\n\t\treturn new Intl.NumberFormat().format(input);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { SafePipe } from './safe.pipe';\nimport { ReplacePipe } from './replace.pipe';\nimport { CapitalizePipe } from './capitalize.pipe';\nimport { PluralPipe } from './plural.pipe';\nimport { RoundPipe } from './round.pipe';\nimport { TimingPipe } from './timing.pipe';\nimport { NumberWithCommasPipe } from './number-with-commas.pipe';\n\n@NgModule({\n\texports: [\n\t\tSafePipe,\n\t\tReplacePipe,\n\t\tCapitalizePipe,\n\t\tPluralPipe,\n\t\tRoundPipe,\n\t\tTimingPipe,\n\t\tNumberWithCommasPipe,\n\t],\n\timports: [],\n\tdeclarations: [\n\t\tSafePipe,\n\t\tReplacePipe,\n\t\tCapitalizePipe,\n\t\tPluralPipe,\n\t\tRoundPipe,\n\t\tTimingPipe,\n\t\tNumberWithCommasPipe,\n\t],\n})\nexport class PipesModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'ngxPlural' })\nexport class PluralPipe implements PipeTransform {\n\ttransform(input: number, label: string, pluralLabel: string = ''): string {\n\t\tinput = input || 0;\n\t\treturn input === 1\n\t\t\t? `${input} ${label}`\n\t\t\t: pluralLabel\n\t\t\t? `${input} ${pluralLabel}`\n\t\t\t: `${input} ${label}s`;\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'myReplacePipe' })\nexport class ReplacePipe implements PipeTransform {\n\ttransform(\n\t\tvalue: string,\n\t\tsearchValue: string,\n\t\treplaceValue: string\n\t): string {\n\t\tif (\n\t\t\ttypeof value !== typeof 'string' ||\n\t\t\ttypeof searchValue !== typeof 'string' ||\n\t\t\ttypeof replaceValue !== typeof 'string'\n\t\t) {\n\t\t\tthrow Error('All pipe parameters should be strings!');\n\t\t}\n\n\t\treturn value.replace(new RegExp(searchValue, 'g'), replaceValue);\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'ngxRound' })\nexport class RoundPipe implements PipeTransform {\n\ttransform(input: number): number {\n\t\treturn Math.round(input);\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {\n\tDomSanitizer,\n\tSafeHtml,\n\tSafeResourceUrl,\n\tSafeScript,\n\tSafeStyle,\n\tSafeUrl,\n} from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'safe',\n})\nexport class SafePipe implements PipeTransform {\n\tconstructor(protected sanitizer: DomSanitizer) {}\n\n\ttransform(\n\t\tvalue: any,\n\t\ttype: string\n\t): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'timing' })\nexport class TimingPipe implements PipeTransform {\n\ttransform(time: number): string {\n\t\tif (time) {\n\t\t\tconst minutes = Math.floor(time / 60);\n\t\t\tconst seconds = Math.floor(time % 60);\n\t\t\treturn `${this.initZero(minutes)}${minutes}:${this.initZero(\n\t\t\t\tseconds\n\t\t\t)}${seconds}`;\n\t\t}\n\n\t\treturn '00:00';\n\t}\n\n\tprivate initZero(time: number): string {\n\t\treturn time < 10 ? '0' : '';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { MaintenanceInfoPage } from './maintenance-info';\nimport { PipesModule } from '@modules/client.common.angular2/pipes/pipes.module';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: MaintenanceInfoPage,\n\t},\n];\n\n@NgModule({\n\tdeclarations: [MaintenanceInfoPage],\n\timports: [\n\t\tRouterModule.forChild(routes),\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tPipesModule,\n\t\tIonicModule,\n\t],\n})\nexport class MaintenanceInfoPageModule {}\n","import { Component } from '@angular/core';\nimport { environment } from '../../../src/environments/environment';\nimport { MaintenanceService } from '@modules/client.common.angular2/services/maintenance.service';\nimport { Store } from '../../../src/services/store.service';\nimport { Router } from '@angular/router';\n\n@Component({\n\tselector: 'page-maintenance-info',\n\ttemplateUrl: 'maintenance-info.html',\n})\nexport class MaintenanceInfoPage {\n\tmessage: string;\n\tinterval: any;\n\tconstructor(\n\t\tprivate maintenanceService: MaintenanceService,\n\t\tprivate store: Store,\n\t\tprivate router: Router\n\t) {\n\t\tthis.getMessage();\n\t\tthis.getStatus();\n\t}\n\n\tget maintenanceMode() {\n\t\treturn this.store.maintenanceMode;\n\t}\n\n\tasync getMessage() {\n\t\tthis.message = await this.maintenanceService.getMessage(\n\t\t\tthis.maintenanceMode,\n\t\t\tenvironment['SETTINGS_MAINTENANCE_API_URL']\n\t\t);\n\t}\n\n\tprivate async getStatus() {\n\t\tthis.interval = setInterval(async () => {\n\t\t\tconst status = await this.maintenanceService.getStatus(\n\t\t\t\tenvironment['SETTINGS_APP_TYPE'],\n\t\t\t\tenvironment['SETTINGS_MAINTENANCE_API_URL']\n\t\t\t);\n\t\t\tconsole.warn(\n\t\t\t\t`Maintenance on '${this.store.maintenanceMode}': ${status}`\n\t\t\t);\n\n\t\t\tif (!status) {\n\t\t\t\tclearInterval(this.interval);\n\t\t\t\tthis.store.clearMaintenanceMode();\n\t\t\t\tthis.router.navigateByUrl('');\n\t\t\t}\n\t\t}, 5000);\n\t}\n}\n"],"sourceRoot":"webpack:///"}