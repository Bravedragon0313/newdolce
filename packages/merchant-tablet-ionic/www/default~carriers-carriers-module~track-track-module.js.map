{"version":3,"sources":["../common-angular/src/pipes/capitalize.pipe.ts","../common-angular/src/pipes/number-with-commas.pipe.ts","../common-angular/src/pipes/pipes.module.ts","../common-angular/src/pipes/plural.pipe.ts","../common-angular/src/pipes/replace.pipe.ts","../common-angular/src/pipes/round.pipe.ts","../common-angular/src/pipes/safe.pipe.ts","../common-angular/src/pipes/timing.pipe.ts","./src/services/carrier.service.ts","./src/services/warehouses.service.ts"],"names":[],"mappings":"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","file":"default~carriers-carriers-module~track-track-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'ngxCapitalize' })\nexport class CapitalizePipe implements PipeTransform {\n\ttransform(input: string): string {\n\t\treturn input && input.length\n\t\t\t? input.charAt(0).toUpperCase() + input.slice(1).toLowerCase()\n\t\t\t: input;\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'myNumberWithCommas' })\nexport class NumberWithCommasPipe implements PipeTransform {\n\ttransform(input: number): string {\n\t\treturn new Intl.NumberFormat().format(input);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { SafePipe } from './safe.pipe';\nimport { ReplacePipe } from './replace.pipe';\nimport { CapitalizePipe } from './capitalize.pipe';\nimport { PluralPipe } from './plural.pipe';\nimport { RoundPipe } from './round.pipe';\nimport { TimingPipe } from './timing.pipe';\nimport { NumberWithCommasPipe } from './number-with-commas.pipe';\n\n@NgModule({\n\texports: [\n\t\tSafePipe,\n\t\tReplacePipe,\n\t\tCapitalizePipe,\n\t\tPluralPipe,\n\t\tRoundPipe,\n\t\tTimingPipe,\n\t\tNumberWithCommasPipe,\n\t],\n\timports: [],\n\tdeclarations: [\n\t\tSafePipe,\n\t\tReplacePipe,\n\t\tCapitalizePipe,\n\t\tPluralPipe,\n\t\tRoundPipe,\n\t\tTimingPipe,\n\t\tNumberWithCommasPipe,\n\t],\n})\nexport class PipesModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'ngxPlural' })\nexport class PluralPipe implements PipeTransform {\n\ttransform(input: number, label: string, pluralLabel: string = ''): string {\n\t\tinput = input || 0;\n\t\treturn input === 1\n\t\t\t? `${input} ${label}`\n\t\t\t: pluralLabel\n\t\t\t? `${input} ${pluralLabel}`\n\t\t\t: `${input} ${label}s`;\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'myReplacePipe' })\nexport class ReplacePipe implements PipeTransform {\n\ttransform(\n\t\tvalue: string,\n\t\tsearchValue: string,\n\t\treplaceValue: string\n\t): string {\n\t\tif (\n\t\t\ttypeof value !== typeof 'string' ||\n\t\t\ttypeof searchValue !== typeof 'string' ||\n\t\t\ttypeof replaceValue !== typeof 'string'\n\t\t) {\n\t\t\tthrow Error('All pipe parameters should be strings!');\n\t\t}\n\n\t\treturn value.replace(new RegExp(searchValue, 'g'), replaceValue);\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'ngxRound' })\nexport class RoundPipe implements PipeTransform {\n\ttransform(input: number): number {\n\t\treturn Math.round(input);\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {\n\tDomSanitizer,\n\tSafeHtml,\n\tSafeResourceUrl,\n\tSafeScript,\n\tSafeStyle,\n\tSafeUrl,\n} from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'safe',\n})\nexport class SafePipe implements PipeTransform {\n\tconstructor(protected sanitizer: DomSanitizer) {}\n\n\ttransform(\n\t\tvalue: any,\n\t\ttype: string\n\t): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'timing' })\nexport class TimingPipe implements PipeTransform {\n\ttransform(time: number): string {\n\t\tif (time) {\n\t\t\tconst minutes = Math.floor(time / 60);\n\t\t\tconst seconds = Math.floor(time % 60);\n\t\t\treturn `${this.initZero(minutes)}${minutes}:${this.initZero(\n\t\t\t\tseconds\n\t\t\t)}${seconds}`;\n\t\t}\n\n\t\treturn '00:00';\n\t}\n\n\tprivate initZero(time: number): string {\n\t\treturn time < 10 ? '0' : '';\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport Carrier from '@modules/server.common/entities/Carrier';\nimport gql from 'graphql-tag';\nimport { Observable } from 'rxjs';\nimport { map, share } from 'rxjs/operators';\nimport ICarrier from '@modules/server.common/interfaces/ICarrier';\n\n@Injectable()\nexport class CarrierService {\n\tconstructor(private readonly _apollo: Apollo) {}\n\n\tprivate carriers$: Observable<Carrier[]> = this._apollo\n\t\t.watchQuery<{ getCarriers: ICarrier[] }>({\n\t\t\tquery: gql`\n\t\t\t\tquery getCarriers {\n\t\t\t\t\tgetCarriers {\n\t\t\t\t\t\t_id\n\t\t\t\t\t\tfirstName\n\t\t\t\t\t\tlastName\n\t\t\t\t\t\tphone\n\t\t\t\t\t\tlogo\n\t\t\t\t\t\tisDeleted\n\t\t\t\t\t\tnumberOfDeliveries\n\t\t\t\t\t\tskippedOrderIds\n\t\t\t\t\t\tstatus\n\t\t\t\t\t\tgeoLocation {\n\t\t\t\t\t\t\tcity\n\t\t\t\t\t\t\tstreetAddress\n\t\t\t\t\t\t\thouse\n\t\t\t\t\t\t\tloc {\n\t\t\t\t\t\t\t\ttype\n\t\t\t\t\t\t\t\tcoordinates\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`,\n\t\t\tpollInterval: 1000,\n\t\t})\n\t\t.valueChanges.pipe(\n\t\t\tmap((res) => res.data.getCarriers),\n\t\t\tmap((carriers) => carriers.map((c) => this._carrierFactory(c))),\n\t\t\tshare()\n\t\t);\n\n\tgetAllCarriers(): Observable<Carrier[]> {\n\t\treturn this.carriers$;\n\t}\n\n\tupdateCarrier(id: string, updateInput: any) {\n\t\treturn this._apollo\n\t\t\t.mutate<{ updateCarrier: Carrier }>({\n\t\t\t\tmutation: gql`\n\t\t\t\t\tmutation UpdateCarrier(\n\t\t\t\t\t\t$id: String!\n\t\t\t\t\t\t$updateInput: CarrierUpdateInput!\n\t\t\t\t\t) {\n\t\t\t\t\t\tupdateCarrier(id: $id, updateInput: $updateInput) {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`,\n\t\t\t\tvariables: {\n\t\t\t\t\tid,\n\t\t\t\t\tupdateInput,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tmap((result) => result.data.updateCarrier),\n\t\t\t\tshare()\n\t\t\t);\n\t}\n\n\tasync getCarrierCurrentOrder(carrierId: string): Promise<any> {\n\t\tconst res = await this._apollo\n\t\t\t.query({\n\t\t\t\tquery: gql`\n\t\t\t\t\tquery GetCarrierCurrentOrder($carrierId: String!) {\n\t\t\t\t\t\tgetCarrierCurrentOrder(carrierId: $carrierId) {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tcarrierStatus\n\t\t\t\t\t\t\tcarrierStatusText\n\t\t\t\t\t\t\twarehouseStatusText\n\t\t\t\t\t\t\tcreatedAt\n\t\t\t\t\t\t\tstartDeliveryTime\n\t\t\t\t\t\t\tstatus\n\t\t\t\t\t\t\tdeliveryTime\n\t\t\t\t\t\t\tfinishedProcessingTime\n\t\t\t\t\t\t\tuser {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\tphone\n\t\t\t\t\t\t\t\temail\n\t\t\t\t\t\t\t\tapartment\n\t\t\t\t\t\t\t\tfirstName\n\t\t\t\t\t\t\t\tlastName\n\t\t\t\t\t\t\t\timage\n\t\t\t\t\t\t\t\tgeoLocation {\n\t\t\t\t\t\t\t\t\thouse\n\t\t\t\t\t\t\t\t\tpostcode\n\t\t\t\t\t\t\t\t\tcountryName\n\t\t\t\t\t\t\t\t\tcity\n\t\t\t\t\t\t\t\t\tstreetAddress\n\t\t\t\t\t\t\t\t\tloc {\n\t\t\t\t\t\t\t\t\t\tcoordinates\n\t\t\t\t\t\t\t\t\t\ttype\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twarehouse {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\tlogo\n\t\t\t\t\t\t\t\tcontactEmail\n\t\t\t\t\t\t\t\tcontactPhone\n\t\t\t\t\t\t\t\tgeoLocation {\n\t\t\t\t\t\t\t\t\thouse\n\t\t\t\t\t\t\t\t\tpostcode\n\t\t\t\t\t\t\t\t\tcountryName\n\t\t\t\t\t\t\t\t\tcity\n\t\t\t\t\t\t\t\t\tstreetAddress\n\t\t\t\t\t\t\t\t\tloc {\n\t\t\t\t\t\t\t\t\t\tcoordinates\n\t\t\t\t\t\t\t\t\t\ttype\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`,\n\t\t\t\tvariables: { carrierId },\n\t\t\t})\n\t\t\t.toPromise();\n\n\t\treturn res.data['getCarrierCurrentOrder'];\n\t}\n\n\tprotected _carrierFactory(carrier: ICarrier) {\n\t\treturn carrier == null ? null : new Carrier(carrier);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport Warehouse from '@modules/server.common/entities/Warehouse';\nimport { map, share } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport gql from 'graphql-tag';\nimport IWarehouse from '@modules/server.common/interfaces/IWarehouse';\nimport IWarehouseProductCreateObject from '@modules/server.common/interfaces/IWarehouseProduct';\nimport GeoLocation from '@modules/server.common/entities/GeoLocation';\nimport IPagingOptions from '@modules/server.common/interfaces/IPagingOptions';\n\n@Injectable()\nexport class WarehousesService {\n\tconstructor(private readonly _apollo: Apollo) {}\n\n\thasExistingStores(): Observable<boolean> {\n\t\treturn this._apollo\n\t\t\t.query<{ hasExistingStores: boolean }>({\n\t\t\t\tquery: gql`\n\t\t\t\t\tquery HasExistingStores {\n\t\t\t\t\t\thasExistingStores\n\t\t\t\t\t}\n\t\t\t\t`,\n\t\t\t})\n\t\t\t.pipe(map((res) => res.data.hasExistingStores));\n\t}\n\n\tgetCountExistingCustomers() {\n\t\treturn this._apollo\n\t\t\t.watchQuery<{\n\t\t\t\tgetCountExistingCustomers: { total; perStore };\n\t\t\t}>({\n\t\t\t\tquery: gql`\n\t\t\t\t\tquery GetCountExistingCustomers {\n\t\t\t\t\t\tgetCountExistingCustomers {\n\t\t\t\t\t\t\ttotal\n\t\t\t\t\t\t\tperStore {\n\t\t\t\t\t\t\t\tstoreId\n\t\t\t\t\t\t\t\tcustomersCount\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`,\n\t\t\t})\n\t\t\t.valueChanges.pipe(\n\t\t\t\tmap((res) => res.data.getCountExistingCustomers)\n\t\t\t);\n\t}\n\n\tgetCountExistingCustomersToday() {\n\t\treturn this._apollo\n\t\t\t.watchQuery<{\n\t\t\t\tgetCountExistingCustomersToday: { total; perStore };\n\t\t\t}>({\n\t\t\t\tquery: gql`\n\t\t\t\t\tquery GetCountExistingCustomersToday {\n\t\t\t\t\t\tgetCountExistingCustomersToday {\n\t\t\t\t\t\t\ttotal\n\t\t\t\t\t\t\tperStore {\n\t\t\t\t\t\t\t\tstoreId\n\t\t\t\t\t\t\t\tcustomersCount\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`,\n\t\t\t})\n\t\t\t.valueChanges.pipe(\n\t\t\t\tmap((res) => res.data.getCountExistingCustomersToday)\n\t\t\t);\n\t}\n\n\tgetAllStores() {\n\t\treturn this._apollo\n\t\t\t.query<{ getAllStores: Warehouse[] }>({\n\t\t\t\tquery: gql`\n\t\t\t\t\tquery GetAllStores {\n\t\t\t\t\t\tgetAllStores {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t_createdAt\n\t\t\t\t\t\t\tusedCarriersIds\n\t\t\t\t\t\t\tgeoLocation {\n\t\t\t\t\t\t\t\tcity\n\t\t\t\t\t\t\t\tstreetAddress\n\t\t\t\t\t\t\t\thouse\n\t\t\t\t\t\t\t\tloc {\n\t\t\t\t\t\t\t\t\tcoordinates\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`,\n\t\t\t})\n\t\t\t.pipe(map((res) => res.data.getAllStores));\n\t}\n\n\tgetStores(pagingOptions?: IPagingOptions): Observable<Warehouse[]> {\n\t\treturn this._apollo\n\t\t\t.watchQuery<{ warehouses: IWarehouse[] }>({\n\t\t\t\tquery: gql`\n\t\t\t\t\tquery AllWarehouses($pagingOptions: PagingOptionsInput) {\n\t\t\t\t\t\twarehouses(pagingOptions: $pagingOptions) {\n\t\t\t\t\t\t\t_id\n\t\t\t\t\t\t\t_createdAt\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\tcontactEmail\n\t\t\t\t\t\t\tcontactPhone\n\t\t\t\t\t\t\tlogo\n\t\t\t\t\t\t\tusername\n\t\t\t\t\t\t\tusedCarriersIds\n\t\t\t\t\t\t\tgeoLocation {\n\t\t\t\t\t\t\t\tcity\n\t\t\t\t\t\t\t\tstreetAddress\n\t\t\t\t\t\t\t\thouse\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`,\n\t\t\t\tvariables: { pagingOptions },\n\t\t\t\tpollInterval: 5000,\n\t\t\t})\n\t\t\t.valueChanges.pipe(\n\t\t\t\tmap((res) => res.data.warehouses),\n\t\t\t\tmap((ws) => ws.map((w) => this._warehouseFactory(w))),\n\t\t\t\tshare()\n\t\t\t);\n\t}\n\n\tgetNearbyStores(geoLocation: GeoLocation): Observable<Warehouse[]> {\n\t\treturn this._apollo\n\t\t\t.watchQuery<{ nearbyStores: IWarehouse[] }>({\n\t\t\t\tquery: gql`\n\t\t\t\t\tquery GetNearbyStores($geoLocation: GeoLocationFindInput!) {\n\t\t\t\t\t\tnearbyStores(geoLocation: $geoLocation) {\n\t\t\t\t\t\t\t_id\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\tcontactEmail\n\t\t\t\t\t\t\tcontactPhone\n\t\t\t\t\t\t\tlogo\n\t\t\t\t\t\t\tgeoLocation {\n\t\t\t\t\t\t\t\tcity\n\t\t\t\t\t\t\t\tstreetAddress\n\t\t\t\t\t\t\t\thouse\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`,\n\t\t\t\tpollInterval: 5000,\n\t\t\t\tvariables: { geoLocation },\n\t\t\t})\n\t\t\t.valueChanges.pipe(\n\t\t\t\tmap((res) => res.data.nearbyStores),\n\t\t\t\tmap((ws) => ws.map((w) => this._warehouseFactory(w))),\n\t\t\t\tshare()\n\t\t\t);\n\t}\n\n\tremoveByIds(ids: string[]) {\n\t\treturn this._apollo.mutate({\n\t\t\tmutation: gql`\n\t\t\t\tmutation RemoveByIds($ids: [String!]!) {\n\t\t\t\t\tremoveWarehousesByIds(ids: $ids)\n\t\t\t\t}\n\t\t\t`,\n\t\t\tvariables: { ids },\n\t\t});\n\t}\n\n\taddProducts(\n\t\twarehouseId: string,\n\t\tproducts: IWarehouseProductCreateObject[]\n\t) {\n\t\treturn this._apollo\n\t\t\t.mutate<{\n\t\t\t\twarehouseId: string;\n\t\t\t\tproducts: IWarehouseProductCreateObject[];\n\t\t\t}>({\n\t\t\t\tmutation: gql`\n\t\t\t\t\tmutation AddProducts(\n\t\t\t\t\t\t$warehouseId: String!\n\t\t\t\t\t\t$products: [WarehouseProductInput!]!\n\t\t\t\t\t) {\n\t\t\t\t\t\taddWarehouseProducts(\n\t\t\t\t\t\t\twarehouseId: $warehouseId\n\t\t\t\t\t\t\tproducts: $products\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tproduct {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`,\n\t\t\t\tvariables: {\n\t\t\t\t\twarehouseId,\n\t\t\t\t\tproducts,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tmap((result) => result.data['warehouseAddProducts']),\n\t\t\t\tshare()\n\t\t\t);\n\t}\n\n\tremoveProductsById(warehouseId: string, productsIds: string[]) {\n\t\treturn this._apollo.mutate({\n\t\t\tmutation: gql`\n\t\t\t\tmutation RemoveProductsByIds(\n\t\t\t\t\t$warehouseId: String!\n\t\t\t\t\t$productsIds: [String!]!\n\t\t\t\t) {\n\t\t\t\t\tremoveWarehouseProducts(\n\t\t\t\t\t\twarehouseId: $warehouseId\n\t\t\t\t\t\tproductsIds: $productsIds\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t`,\n\t\t\tvariables: { warehouseId, productsIds },\n\t\t});\n\t}\n\n\tgetStoreById(id: string) {\n\t\treturn this._apollo\n\t\t\t.query({\n\t\t\t\tquery: gql`\n\t\t\t\t\tquery GetStoreById($id: String!) {\n\t\t\t\t\t\twarehouse(id: $id) {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\tlogo\n\t\t\t\t\t\t\tusedCarriersIds\n\t\t\t\t\t\t\tcontactEmail\n\t\t\t\t\t\t\tcontactPhone\n\t\t\t\t\t\t\tgeoLocation {\n\t\t\t\t\t\t\t\tcity\n\t\t\t\t\t\t\t\tstreetAddress\n\t\t\t\t\t\t\t\thouse\n\t\t\t\t\t\t\t\tloc {\n\t\t\t\t\t\t\t\t\tcoordinates\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`,\n\t\t\t\tvariables: { id },\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tmap((res) => res.data['warehouse']),\n\t\t\t\tshare()\n\t\t\t);\n\t}\n\n\tasync getCountOfMerchants() {\n\t\tconst res = await this._apollo\n\t\t\t.query({\n\t\t\t\tquery: gql`\n\t\t\t\t\tquery GetCountOfMerchants {\n\t\t\t\t\t\tgetCountOfMerchants\n\t\t\t\t\t}\n\t\t\t\t`,\n\t\t\t})\n\t\t\t.toPromise();\n\n\t\treturn res.data['getCountOfMerchants'];\n\t}\n\n\tprotected _warehouseFactory(warehouse: IWarehouse) {\n\t\treturn warehouse == null ? null : new Warehouse(warehouse);\n\t}\n}\n"],"sourceRoot":"webpack:///"}