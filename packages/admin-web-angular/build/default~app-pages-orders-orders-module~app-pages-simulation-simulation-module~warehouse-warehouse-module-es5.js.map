{"version":3,"sources":["webpack:///node_modules/ng-simple-slideshow/ng-simple-slideshow.js"],"names":["SwipeService","e","when","coord","changedTouches","pageX","pageY","time","Date","getTime","_swipeCoord","_swipeTime","direction","duration","Math","abs","decorators","type","ctorParameters","FIRST_SLIDE_KEY","SlideshowComponent","_swipeService","_renderer","_transferState","_ngZone","sanitizer","platform_id","document","slideIndex","slides","_initial","_isHidden","imageUrls","height","showArrows","disableSwiping","autoPlay","autoPlayInterval","stopAutoPlayOnSlide","autoPlayWaitForLazyLoad","backgroundSize","backgroundPosition","backgroundRepeat","showDots","dotColor","showCaptions","captionColor","captionBackground","lazyLoad","hideOnNoSlides","fullscreen","onSlideLeft","onSlideRight","onSwipeLeft","onSwipeRight","onFullscreenExit","onIndexChanged","debug","undefined","console","warn","length","_urlCache","Array","from","removeStyle","container","nativeElement","setSlides","setStyle","setStyles","handleAutoPlay","indexDirection","isSwipe","slide","swipe","onSlide","preventDefault","currentSlide","image","clickAction","href","location","index","beforeClickIndex","setSlideIndex","loaded","loadRemainingSlides","slideRight","selected","url","emit","oldIndex","slideLeft","getLeftSideIndex","leftSide","action","rightSide","getRightSideIndex","checkCache","buildLazyLoadSlideArray","buildSlideArray","push","loadFirstSlide","tmpIndex","tmpImage","set","firstSlideFromTransferState","get","loadImage","Image","src","addEventListener","remove","i","Promise","resolve","stopAutoPlay","_autoplayIntervalId","runOutsideAngular","clearInterval","setInterval","run","minHeight","arrowSize","prevArrow","nextArrow","every","cacheElement","bypassSecurityTrustStyle","args","selector","template","styles","propDecorators","SlideshowModule","imports","declarations","exports","providers"],"mappings":"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","file":"default~app-pages-orders-orders-module~app-pages-simulation-simulation-module~warehouse-warehouse-module-es5.js","sourcesContent":["import { Component, EventEmitter, Inject, Injectable, Input, NgModule, NgZone, Output, PLATFORM_ID, Renderer2, ViewChild } from '@angular/core';\nimport { CommonModule, DOCUMENT, isPlatformServer } from '@angular/common';\nimport { BrowserTransferStateModule, DomSanitizer, TransferState, makeStateKey } from '@angular/platform-browser';\n\nclass SwipeService {\n    /**\n     * \\@description detect the direction of the swipe, and return a -1 or 1 if the duration is long enough\n     *              else return a 0 to do nothing\n     * @param {?} e\n     * @param {?} when\n     * @return {?}\n     */\n    swipe(e, when) {\n        const /** @type {?} */ coord = [e.changedTouches[0].pageX, e.changedTouches[0].pageY];\n        const /** @type {?} */ time = new Date().getTime();\n        if (when === 'start') {\n            this._swipeCoord = coord;\n            this._swipeTime = time;\n        }\n        else if (when === 'end') {\n            const /** @type {?} */ direction = [coord[0] - this._swipeCoord[0], coord[1] - this._swipeCoord[1]];\n            const /** @type {?} */ duration = time - this._swipeTime;\n            if (duration < 1000 // Short enough\n                && Math.abs(direction[1]) < Math.abs(direction[0]) // Horizontal enough\n                && Math.abs(direction[0]) > 30) {\n                return direction[0] < 0 ? 1 : -1;\n            }\n        }\n        return 0;\n    }\n}\nSwipeService.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nSwipeService.ctorParameters = () => [];\n\nconst FIRST_SLIDE_KEY = makeStateKey('firstSlide');\nclass SlideshowComponent {\n    /**\n     * @param {?} _swipeService\n     * @param {?} _renderer\n     * @param {?} _transferState\n     * @param {?} _ngZone\n     * @param {?} sanitizer\n     * @param {?} platform_id\n     * @param {?} document\n     */\n    constructor(_swipeService, _renderer, _transferState, _ngZone, sanitizer, platform_id, document) {\n        this._swipeService = _swipeService;\n        this._renderer = _renderer;\n        this._transferState = _transferState;\n        this._ngZone = _ngZone;\n        this.sanitizer = sanitizer;\n        this.platform_id = platform_id;\n        this.document = document;\n        this.slideIndex = -1;\n        this.slides = [];\n        this._initial = true;\n        this._isHidden = false;\n        this.imageUrls = [];\n        this.height = '100%';\n        this.showArrows = true;\n        this.disableSwiping = false;\n        this.autoPlay = false;\n        this.autoPlayInterval = 3333;\n        this.stopAutoPlayOnSlide = true;\n        this.autoPlayWaitForLazyLoad = false;\n        this.backgroundSize = 'cover';\n        this.backgroundPosition = 'center center';\n        this.backgroundRepeat = 'no-repeat';\n        this.showDots = false;\n        this.dotColor = '#FFF';\n        this.showCaptions = true;\n        this.captionColor = '#FFF';\n        this.captionBackground = 'rgba(0, 0, 0, .35)';\n        this.lazyLoad = false;\n        this.hideOnNoSlides = false;\n        this.fullscreen = false;\n        this.onSlideLeft = new EventEmitter();\n        this.onSlideRight = new EventEmitter();\n        this.onSwipeLeft = new EventEmitter();\n        this.onSwipeRight = new EventEmitter();\n        this.onFullscreenExit = new EventEmitter();\n        this.onIndexChanged = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    get safeStyleDotColor() {\n        return this.sanitizer.bypassSecurityTrustStyle(`--dot-color: ${this.dotColor}`);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.debug !== undefined) {\n            console.warn('[Deprecation Warning]: The debug input will be removed from ng-simple-slideshow in 1.3.0');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // if this is the first being called, create a copy of the input\n        if (this.imageUrls && this.imageUrls.length > 0) {\n            if (this._initial === true) {\n                this._urlCache = Array.from(this.imageUrls);\n            }\n            if (this._isHidden === true) {\n                this._renderer.removeStyle(this.container.nativeElement, 'display');\n                this._isHidden = false;\n            }\n            this.setSlides();\n        }\n        else if (this.hideOnNoSlides === true) {\n            this._renderer.setStyle(this.container.nativeElement, 'display', 'none');\n            this._isHidden = true;\n        }\n        this.setStyles();\n        this.handleAutoPlay();\n    }\n    /**\n     * \\@description this is the function that should be called to make the slides change.\n     *              indexDirection to move back is -1, to move forward is 1, and to stay in place is 0.\n     *              0 is taken into account for failed swipes\n     * @param {?} indexDirection\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    onSlide(indexDirection, isSwipe) {\n        this.handleAutoPlay(this.stopAutoPlayOnSlide);\n        this.slide(indexDirection, isSwipe);\n    }\n    /**\n     * \\@description Use the swipe service to detect swipe events from phone and tablets\n     * @param {?} e\n     * @param {?} when\n     * @return {?}\n     */\n    onSwipe(e, when) {\n        if (this.disableSwiping === true) {\n            return;\n        }\n        const /** @type {?} */ indexDirection = this._swipeService.swipe(e, when);\n        // handle a failed swipe\n        if (indexDirection === 0) {\n            return;\n        }\n        else {\n            this.onSlide(indexDirection, true);\n        }\n    }\n    /**\n     * \\@description Redirect to current slide \"href\" if defined\n     * @param {?} e\n     * @return {?}\n     */\n    onClick(e) {\n        e.preventDefault();\n        const /** @type {?} */ currentSlide = this.slides.length > 0 && this.slides[this.slideIndex];\n        if (currentSlide && currentSlide.image.clickAction) {\n            currentSlide.image.clickAction();\n        }\n        else if (currentSlide && currentSlide.image.href) {\n            this.document.location.href = currentSlide.image.href;\n        }\n    }\n    /**\n     * \\@description set the index to the desired index - 1 and simulate a right slide\n     * @param {?} index\n     * @return {?}\n     */\n    goToSlide(index) {\n        const /** @type {?} */ beforeClickIndex = this.slideIndex;\n        this.slideIndex = index - 1;\n        this.setSlideIndex(1);\n        if (!this.slides[this.slideIndex].loaded) {\n            this.loadRemainingSlides();\n        }\n        this.handleAutoPlay(this.stopAutoPlayOnSlide);\n        this.slideRight(beforeClickIndex);\n        this.slides[beforeClickIndex].selected = false;\n        this.slides[this.slideIndex].selected = true;\n    }\n    /**\n     * \\@description set the index to the desired index - 1 and simulate a right slide\n     * @param {?} index\n     * @return {?}\n     */\n    getSlideStyle(index) {\n        const /** @type {?} */ slide = this.slides[index];\n        if (slide.loaded) {\n            return {\n                \"background-image\": 'url(' + slide.image.url + ')',\n                \"background-size\": slide.image.backgroundSize || this.backgroundSize,\n                \"background-position\": slide.image.backgroundPosition || this.backgroundPosition,\n                \"background-repeat\": slide.image.backgroundRepeat || this.backgroundRepeat\n            };\n        }\n        else {\n            // doesn't compile correctly if returning an empty object, sooooo.....\n            return {\n                \"background-image\": undefined,\n                \"background-size\": undefined,\n                \"background-position\": undefined,\n                \"background-repeat\": undefined\n            };\n        }\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    exitFullScreen(e) {\n        e.preventDefault();\n        this.fullscreen = false;\n        this.onFullscreenExit.emit(true);\n    }\n    /**\n     * \\@description Set the new slide index, then make the transition happen.\n     * @param {?} indexDirection\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    slide(indexDirection, isSwipe) {\n        const /** @type {?} */ oldIndex = this.slideIndex;\n        this.setSlideIndex(indexDirection);\n        if (!this.slides[this.slideIndex].loaded) {\n            this.loadRemainingSlides();\n        }\n        if (indexDirection === 1) {\n            this.slideRight(oldIndex, isSwipe);\n        }\n        else {\n            this.slideLeft(oldIndex, isSwipe);\n        }\n        this.slides[oldIndex].selected = false;\n        this.slides[this.slideIndex].selected = true;\n    }\n    /**\n     * \\@description This is just treating the url array like a circular list.\n     * @param {?} indexDirection\n     * @return {?}\n     */\n    setSlideIndex(indexDirection) {\n        this.slideIndex += indexDirection;\n        if (this.slideIndex < 0) {\n            this.slideIndex = this.slides.length - 1;\n        }\n        if (this.slideIndex >= this.slides.length) {\n            this.slideIndex = 0;\n        }\n        this.onIndexChanged.emit(this.slideIndex);\n    }\n    /**\n     * \\@description This function handles the variables to move the CSS classes around accordingly.\n     *              In order to correctly handle animations, the new slide as well as the slides to\n     *              the left and right are assigned classes.\n     * @param {?} oldIndex\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    slideLeft(oldIndex, isSwipe) {\n        if (isSwipe === true) {\n            this.onSwipeLeft.emit(this.slideIndex);\n        }\n        else {\n            this.onSlideLeft.emit(this.slideIndex);\n        }\n        this.slides[this.getLeftSideIndex(oldIndex)].leftSide = false;\n        this.slides[oldIndex].leftSide = true;\n        this.slides[oldIndex].action = 'slideOutLeft';\n        this.slides[this.slideIndex].rightSide = false;\n        this.slides[this.getRightSideIndex()].rightSide = true;\n        this.slides[this.slideIndex].action = 'slideInRight';\n    }\n    /**\n     * \\@description This function handles the variables to move the CSS classes around accordingly.\n     *              In order to correctly handle animations, the new slide as well as the slides to\n     *              the left and right are assigned classes.\n     * @param {?} oldIndex\n     * @param {?=} isSwipe\n     * @return {?}\n     */\n    slideRight(oldIndex, isSwipe) {\n        if (isSwipe === true) {\n            this.onSwipeRight.emit(this.slideIndex);\n        }\n        else {\n            this.onSlideRight.emit(this.slideIndex);\n        }\n        this.slides[this.getRightSideIndex(oldIndex)].rightSide = false;\n        this.slides[oldIndex].rightSide = true;\n        this.slides[oldIndex].action = 'slideOutRight';\n        this.slides[this.slideIndex].leftSide = false;\n        this.slides[this.getLeftSideIndex()].leftSide = true;\n        this.slides[this.slideIndex].action = 'slideInLeft';\n    }\n    /**\n     * \\@description Check to make sure slide images have been set or haven't changed\n     * @return {?}\n     */\n    setSlides() {\n        if (this.imageUrls) {\n            if (this.checkCache() || this._initial === true) {\n                this._initial = false;\n                this._urlCache = Array.from(this.imageUrls);\n                this.slides = [];\n                if (this.lazyLoad === true) {\n                    this.buildLazyLoadSlideArray();\n                }\n                else {\n                    this.buildSlideArray();\n                }\n            }\n        }\n    }\n    /**\n     * \\@description create the slides without background urls, which will be added in\n     *              for the \"lazy load,\" then load only the first slide\n     * @return {?}\n     */\n    buildLazyLoadSlideArray() {\n        for (let /** @type {?} */ image of this.imageUrls) {\n            this.slides.push({\n                image: (typeof image === 'string' ? { url: null } : { url: null, href: image.href || '' }),\n                action: '',\n                leftSide: false,\n                rightSide: false,\n                selected: false,\n                loaded: false\n            });\n        }\n        this.slideIndex = 0;\n        this.slides[this.slideIndex].selected = true;\n        this.loadFirstSlide();\n        this.onIndexChanged.emit(this.slideIndex);\n    }\n    /**\n     * \\@description create the slides with background urls all at once\n     * @return {?}\n     */\n    buildSlideArray() {\n        for (let /** @type {?} */ image of this.imageUrls) {\n            this.slides.push({\n                image: (typeof image === 'string' ? { url: image } : image),\n                action: '',\n                leftSide: false,\n                rightSide: false,\n                selected: false,\n                loaded: true\n            });\n        }\n        this.slideIndex = 0;\n        this.slides[this.slideIndex].selected = true;\n        this.onIndexChanged.emit(this.slideIndex);\n    }\n    /**\n     * \\@description load the first slide image if lazy loading\n     *              this takes server side and browser side into account\n     * @return {?}\n     */\n    loadFirstSlide() {\n        const /** @type {?} */ tmpIndex = this.slideIndex;\n        const /** @type {?} */ tmpImage = this.imageUrls[tmpIndex];\n        // if server side, we don't need to worry about the rest of the slides\n        if (isPlatformServer(this.platform_id)) {\n            this.slides[tmpIndex].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n            this.slides[tmpIndex].loaded = true;\n            this._transferState.set(FIRST_SLIDE_KEY, this.slides[tmpIndex]);\n        }\n        else {\n            const /** @type {?} */ firstSlideFromTransferState = this._transferState.get(FIRST_SLIDE_KEY, /** @type {?} */ (null));\n            // if the first slide didn't finish loading on the server side, we need to load it\n            if (firstSlideFromTransferState === null) {\n                let /** @type {?} */ loadImage = new Image();\n                loadImage.src = (typeof tmpImage === 'string' ? tmpImage : tmpImage.url);\n                loadImage.addEventListener('load', () => {\n                    this.slides[tmpIndex].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n                    this.slides[tmpIndex].loaded = true;\n                });\n            }\n            else {\n                this.slides[tmpIndex] = firstSlideFromTransferState;\n                this._transferState.remove(FIRST_SLIDE_KEY);\n            }\n        }\n    }\n    /**\n     * \\@description if lazy loading in browser, start loading remaining slides\n     * \\@todo: figure out how to not show the spinner if images are loading fast enough\n     * @return {?}\n     */\n    loadRemainingSlides() {\n        for (let /** @type {?} */ i = 0; i < this.slides.length; i++) {\n            if (!this.slides[i].loaded) {\n                new Promise((resolve) => {\n                    const /** @type {?} */ tmpImage = this.imageUrls[i];\n                    let /** @type {?} */ loadImage = new Image();\n                    loadImage.addEventListener('load', () => {\n                        this.slides[i].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n                        this.slides[i].loaded = true;\n                        resolve();\n                    });\n                    loadImage.src = (typeof tmpImage === 'string' ? tmpImage : tmpImage.url);\n                });\n            }\n        }\n    }\n    /**\n     * \\@description Start or stop autoPlay, don't do it at all server side\n     * @param {?=} stopAutoPlay\n     * @return {?}\n     */\n    handleAutoPlay(stopAutoPlay) {\n        if (isPlatformServer(this.platform_id)) {\n            return;\n        }\n        if (stopAutoPlay === true || this.autoPlay === false) {\n            if (this._autoplayIntervalId) {\n                this._ngZone.runOutsideAngular(() => clearInterval(this._autoplayIntervalId));\n                this._autoplayIntervalId = null;\n            }\n        }\n        else if (!this._autoplayIntervalId) {\n            this._ngZone.runOutsideAngular(() => {\n                this._autoplayIntervalId = setInterval(() => {\n                    if (!this.autoPlayWaitForLazyLoad || (this.autoPlayWaitForLazyLoad && this.slides[this.slideIndex].loaded)) {\n                        this._ngZone.run(() => this.slide(1));\n                    }\n                }, this.autoPlayInterval);\n            });\n        }\n    }\n    /**\n     * \\@description Keep the styles up to date with the input\n     * @return {?}\n     */\n    setStyles() {\n        if (this.fullscreen) {\n            this._renderer.setStyle(this.container.nativeElement, 'height', '100%');\n            // Would be nice to make it configurable\n            this._renderer.setStyle(this.container.nativeElement, 'background-color', 'white');\n        }\n        else {\n            // Would be nice to make it configurable\n            this._renderer.removeStyle(this.container.nativeElement, 'background-color');\n            if (this.height) {\n                this._renderer.setStyle(this.container.nativeElement, 'height', this.height);\n            }\n            if (this.minHeight) {\n                this._renderer.setStyle(this.container.nativeElement, 'min-height', this.minHeight);\n            }\n        }\n        if (this.arrowSize) {\n            this._renderer.setStyle(this.prevArrow.nativeElement, 'height', this.arrowSize);\n            this._renderer.setStyle(this.prevArrow.nativeElement, 'width', this.arrowSize);\n            this._renderer.setStyle(this.nextArrow.nativeElement, 'height', this.arrowSize);\n            this._renderer.setStyle(this.nextArrow.nativeElement, 'width', this.arrowSize);\n        }\n    }\n    /**\n     * \\@description compare image array to the cache, returns false if no changes\n     * @return {?}\n     */\n    checkCache() {\n        return !(this._urlCache.length === this.imageUrls.length && this._urlCache.every((cacheElement, i) => cacheElement === this.imageUrls[i]));\n    }\n    /**\n     * \\@description get the index for the slide to the left of the new slide\n     * @param {?=} i\n     * @return {?}\n     */\n    getLeftSideIndex(i) {\n        if (i === undefined) {\n            i = this.slideIndex;\n        }\n        if (--i < 0) {\n            i = this.slides.length - 1;\n        }\n        return i;\n    }\n    /**\n     * \\@description get the index for the slide to the right of the new slide\n     * @param {?=} i\n     * @return {?}\n     */\n    getRightSideIndex(i) {\n        if (i === undefined) {\n            i = this.slideIndex;\n        }\n        if (++i >= this.slides.length) {\n            i = 0;\n        }\n        return i;\n    }\n    /**\n     * \\@description a trackBy function for the ngFor loops\n     * @param {?} index\n     * @param {?} slide\n     * @return {?}\n     */\n    trackByFn(index, slide) {\n        return slide.image;\n    }\n}\nSlideshowComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'slideshow',\n                template: `\n    <!-- fullscreen bar -->\n    <div [class.display-none]=\"!fullscreen\"\n         class=\"fs-container\"\n         (click)=\"exitFullScreen($event)\">\n      <i title=\"Back\"\n         class=\"arrow-exitfs prev\"></i>\n    </div>\n    <div #container\n         (touchstart)=\"onSwipe($event, 'start')\"\n         (touchend)=\"onSwipe($event, 'end')\"\n         class=\"slideshow-container\"\n         [class.slideshow-container-fs]=\"fullscreen\">\n      <!-- slides -->\n      <a *ngFor=\"let slide of slides; index as i; trackBy: trackByFn\"\n         class=\"slides\"\n         href=\"{{slide?.image?.clickAction ? '#' : slide?.image?.href}}\"\n         title=\"{{slide?.image?.title}}\"\n         [ngStyle]=\"getSlideStyle(i)\"\n         [class.selected]=\"slide?.selected\"\n         [class.hide-slide]=\"!slide?.selected && !slide?.leftSide && !slide?.rightSide\"\n         [class.left-side]=\"slide?.leftSide\"\n         [class.right-side]=\"slide?.rightSide\"\n         [class.slide-in-left]=\"slide?.action === 'slideInLeft'\"\n         [class.slide-in-right]=\"slide?.action === 'slideInRight'\"\n         [class.slide-out-left]=\"slide?.action === 'slideOutLeft'\"\n         [class.slide-out-right]=\"slide?.action === 'slideOutRight'\"\n         [class.link]=\"slide?.image?.clickAction || slide?.image?.href\"\n         (click)=\"onClick($event)\">\n        <div class=\"loader\"\n             *ngIf=\"!slide?.loaded\"></div>\n        <div *ngIf=\"showCaptions && slide?.image?.caption\"\n             class=\"caption\"\n             [ngStyle]=\"{\n               'color': captionColor,\n               'background-color': captionBackground\n              }\"\n             [innerHTML]=\"slide?.image?.caption\">\n        </div>\n      </a>\n      <!-- left arrow -->\n      <div [class.display-none]=\"!this.showArrows\"\n           (click)=\"onSlide(-1)\"\n           class=\"arrow-container prev\">\n        <i #prevArrow\n           title=\"Previous\"\n           class=\"arrow prev\"></i>\n      </div>\n      <!-- right arrow -->\n      <div [class.display-none]=\"!this.showArrows\"\n           (click)=\"onSlide(1)\"\n           class=\"arrow-container next\">\n        <i #nextArrow\n           title=\"Next\"\n           class=\"arrow next\"></i>\n      </div>\n      <!-- dots -->\n      <ul class=\"slick-dots\"\n          *ngIf=\"showDots\">\n        <li *ngFor=\"let slide of slides; index as i; trackBy: trackByFn\"\n            (click)=\"goToSlide(i)\"\n            [class.slick-active]=\"slide.selected\">\n          <button type=\"button\"\n                  [attr.style]=\"safeStyleDotColor\">\n            {{i}}\n          </button>\n        </li>\n      </ul>\n    </div>\n  `,\n                styles: [`\n    /*\n     styles adapted from https://www.w3schools.com/w3css/4/w3.css\n     arrow styles adapted from https://codepen.io/minustalent/pen/Frhaw\n     */\n    .display-none {\n      display: none !important; }\n\n    .fs-container {\n      display: block;\n      cursor: pointer;\n      position: fixed;\n      z-index: 1;\n      top: 16px;\n      left: 16px;\n      width: 46px;\n      height: 46px;\n      text-align: center;\n      padding: 0;\n      background-color: rgba(0, 0, 0, 0.2);\n      -webkit-transition: all .2s ease-in-out;\n      transition: all .2s ease-in-out; }\n      .fs-container:hover {\n        background-color: rgba(0, 0, 0, 0.33); }\n      .fs-container .arrow-exitfs {\n        display: block;\n        width: 30px;\n        height: 30px;\n        background: transparent;\n        border-top: 2px solid #f2f2f2;\n        -webkit-transition: all .2s ease-in-out;\n        transition: all .2s ease-in-out; }\n        .fs-container .arrow-exitfs.prev {\n          -webkit-transform: rotate(-45deg);\n                  transform: rotate(-45deg);\n          position: relative;\n          left: 18px;\n          top: 18px; }\n        .fs-container .arrow-exitfs:after {\n          content: '';\n          width: 30px;\n          height: 30px;\n          background: transparent;\n          border-top: 2px solid #f2f2f2;\n          -webkit-transform: rotate(90deg);\n                  transform: rotate(90deg);\n          position: absolute;\n          left: -15px;\n          top: -17px; }\n\n    .slideshow-container.slideshow-container-fs {\n      position: fixed;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%; }\n\n    .slideshow-container {\n      position: relative;\n      display: block;\n      margin: auto;\n      height: 100%;\n      width: 100%;\n      overflow: hidden; }\n      .slideshow-container .hide-slide {\n        visibility: hidden;\n        position: absolute;\n        top: -100vw;\n        left: -100vw;\n        opacity: 0; }\n      .slideshow-container .slides {\n        position: absolute;\n        top: 0;\n        height: 100%;\n        width: 100%;\n        visibility: visible;\n        opacity: 1;\n        display: block; }\n        .slideshow-container .slides.selected {\n          left: 0; }\n        .slideshow-container .slides.left-slide {\n          left: -100%; }\n        .slideshow-container .slides.right-slide {\n          left: 100%; }\n        .slideshow-container .slides.slide-in-left {\n          left: 0;\n          -webkit-animation: slideInLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideInLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.slide-in-right {\n          left: 0;\n          -webkit-animation: slideInRight 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideInRight 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.slide-out-left {\n          left: -100%;\n          -webkit-animation: slideOutLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideOutLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.slide-out-right {\n          left: 100%;\n          -webkit-animation: slideOutRight 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideOutRight 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.link {\n          cursor: pointer; }\n        .slideshow-container .slides:not(.link) {\n          cursor: default; }\n      .slideshow-container .caption {\n        position: absolute;\n        bottom: 0;\n        padding: 10px;\n        width: 100%; }\n      .slideshow-container .arrow-container {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center;\n        -webkit-box-pack: center;\n            -ms-flex-pack: center;\n                justify-content: center;\n        position: absolute;\n        top: 0;\n        height: 100%;\n        width: auto;\n        cursor: pointer;\n        background-size: 100%;\n        background-image: -webkit-gradient(linear, left top, left bottom, from(transparent), to(transparent));\n        background-image: linear-gradient(transparent, transparent);\n        z-index: 100;\n        -webkit-user-select: none;\n           -moz-user-select: none;\n            -ms-user-select: none;\n                user-select: none; }\n        .slideshow-container .arrow-container:before {\n          display: block;\n          height: 100%;\n          position: absolute;\n          top: 0;\n          left: 0;\n          opacity: 0;\n          width: 100%;\n          z-index: -100;\n          -webkit-transition: opacity 0.45s;\n          transition: opacity 0.45s; }\n        .slideshow-container .arrow-container.prev {\n          left: 0; }\n          .slideshow-container .arrow-container.prev:before {\n            background-image: -webkit-gradient(linear, right top, left top, from(transparent), to(rgba(0, 0, 0, 0.75)));\n            background-image: linear-gradient(to left, transparent, rgba(0, 0, 0, 0.75));\n            content: ''; }\n        .slideshow-container .arrow-container.next {\n          right: 0; }\n          .slideshow-container .arrow-container.next:before {\n            background-image: -webkit-gradient(linear, left top, right top, from(transparent), to(rgba(0, 0, 0, 0.75)));\n            background-image: linear-gradient(to right, transparent, rgba(0, 0, 0, 0.75));\n            content: ''; }\n        .slideshow-container .arrow-container .arrow {\n          display: block;\n          margin: auto;\n          width: 30px;\n          height: 30px;\n          background: transparent;\n          border-top: 2px solid #f2f2f2;\n          border-left: 2px solid #f2f2f2;\n          -webkit-transition: all .2s ease-in-out;\n          transition: all .2s ease-in-out;\n          -webkit-user-select: none;\n             -moz-user-select: none;\n              -ms-user-select: none;\n                  user-select: none; }\n          .slideshow-container .arrow-container .arrow:before {\n            display: block;\n            height: 200%;\n            width: 200%;\n            margin-left: -50%;\n            margin-top: -50%;\n            content: \"\";\n            -webkit-transform: rotate(45deg);\n                    transform: rotate(45deg); }\n          .slideshow-container .arrow-container .arrow.prev {\n            -webkit-transform: rotate(-45deg);\n                    transform: rotate(-45deg);\n            position: relative;\n            left: 20px;\n            margin-right: 10px; }\n          .slideshow-container .arrow-container .arrow.next {\n            -webkit-transform: rotate(135deg);\n                    transform: rotate(135deg);\n            position: relative;\n            right: 20px;\n            margin-left: 10px; }\n      .slideshow-container .slick-dots {\n        display: block;\n        bottom: 15px;\n        z-index: 1;\n        text-align: center;\n        position: absolute;\n        padding: 0;\n        left: 0;\n        right: 0;\n        margin: 0 auto; }\n        .slideshow-container .slick-dots li {\n          display: inline;\n          margin: 0;\n          padding: 0; }\n          .slideshow-container .slick-dots li button {\n            border: none;\n            background: none;\n            text-indent: -9999px;\n            font-size: 0;\n            width: 20px;\n            height: 20px;\n            outline: none;\n            position: relative;\n            z-index: 1;\n            cursor: pointer; }\n            .slideshow-container .slick-dots li button:before {\n              content: '';\n              width: 4px;\n              height: 4px;\n              background: var(--dot-color, #FFF);\n              border-radius: 4px;\n              display: block;\n              position: absolute;\n              top: 50%;\n              left: 50%;\n              -webkit-transform: translate(-50%, -50%);\n                      transform: translate(-50%, -50%);\n              opacity: .7;\n              -webkit-transition: all .5s ease-out;\n              transition: all .5s ease-out; }\n          .slideshow-container .slick-dots li.slick-active button:before {\n            -webkit-transform: translate(-50%, -50%) scale(1.4);\n                    transform: translate(-50%, -50%) scale(1.4);\n            opacity: 1; }\n\n    @media screen and (min-width: 768px) {\n      .slideshow-container .arrow-container:hover:before {\n        opacity: 1; }\n      .slideshow-container .arrow-container:hover .arrow {\n        border-width: 4px; }\n      .slideshow-container .arrow-container .arrow:hover {\n        border-width: 4px; } }\n\n    @-webkit-keyframes slideInRight {\n      0% {\n        left: -100%; }\n      100% {\n        left: 0; } }\n\n    @keyframes slideInRight {\n      0% {\n        left: -100%; }\n      100% {\n        left: 0; } }\n\n    @-webkit-keyframes slideInLeft {\n      0% {\n        left: 100%; }\n      100% {\n        left: 0; } }\n\n    @keyframes slideInLeft {\n      0% {\n        left: 100%; }\n      100% {\n        left: 0; } }\n\n    @-webkit-keyframes slideOutRight {\n      0% {\n        left: 0; }\n      100% {\n        left: -100%; } }\n\n    @keyframes slideOutRight {\n      0% {\n        left: 0; }\n      100% {\n        left: -100%; } }\n\n    @-webkit-keyframes slideOutLeft {\n      0% {\n        left: 0; }\n      100% {\n        left: 100%; } }\n\n    @keyframes slideOutLeft {\n      0% {\n        left: 0; }\n      100% {\n        left: 100%; } }\n\n    .loader {\n      position: absolute;\n      left: 50%;\n      margin-left: -20px;\n      top: 50%;\n      margin-top: -20px;\n      border: 5px solid #f3f3f3;\n      border-top: 5px solid #555;\n      border-radius: 50%;\n      width: 50px;\n      height: 50px;\n      -webkit-animation: spin 1s linear infinite;\n              animation: spin 1s linear infinite; }\n\n    @-webkit-keyframes spin {\n      0% {\n        -webkit-transform: rotate(0deg);\n                transform: rotate(0deg); }\n      100% {\n        -webkit-transform: rotate(360deg);\n                transform: rotate(360deg); } }\n\n    @keyframes spin {\n      0% {\n        -webkit-transform: rotate(0deg);\n                transform: rotate(0deg); }\n      100% {\n        -webkit-transform: rotate(360deg);\n                transform: rotate(360deg); } }\n  `]\n            },] },\n];\n/**\n * @nocollapse\n */\nSlideshowComponent.ctorParameters = () => [\n    { type: SwipeService, },\n    { type: Renderer2, },\n    { type: TransferState, },\n    { type: NgZone, },\n    { type: DomSanitizer, },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n];\nSlideshowComponent.propDecorators = {\n    'imageUrls': [{ type: Input },],\n    'height': [{ type: Input },],\n    'minHeight': [{ type: Input },],\n    'arrowSize': [{ type: Input },],\n    'showArrows': [{ type: Input },],\n    'disableSwiping': [{ type: Input },],\n    'autoPlay': [{ type: Input },],\n    'autoPlayInterval': [{ type: Input },],\n    'stopAutoPlayOnSlide': [{ type: Input },],\n    'autoPlayWaitForLazyLoad': [{ type: Input },],\n    'debug': [{ type: Input },],\n    'backgroundSize': [{ type: Input },],\n    'backgroundPosition': [{ type: Input },],\n    'backgroundRepeat': [{ type: Input },],\n    'showDots': [{ type: Input },],\n    'dotColor': [{ type: Input },],\n    'showCaptions': [{ type: Input },],\n    'captionColor': [{ type: Input },],\n    'captionBackground': [{ type: Input },],\n    'lazyLoad': [{ type: Input },],\n    'hideOnNoSlides': [{ type: Input },],\n    'fullscreen': [{ type: Input },],\n    'onSlideLeft': [{ type: Output },],\n    'onSlideRight': [{ type: Output },],\n    'onSwipeLeft': [{ type: Output },],\n    'onSwipeRight': [{ type: Output },],\n    'onFullscreenExit': [{ type: Output },],\n    'onIndexChanged': [{ type: Output },],\n    'container': [{ type: ViewChild, args: ['container',] },],\n    'prevArrow': [{ type: ViewChild, args: ['prevArrow',] },],\n    'nextArrow': [{ type: ViewChild, args: ['nextArrow',] },],\n};\n\nclass SlideshowModule {\n}\nSlideshowModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    BrowserTransferStateModule\n                ],\n                declarations: [\n                    SlideshowComponent\n                ],\n                exports: [\n                    SlideshowComponent\n                ],\n                providers: [\n                    SwipeService\n                ]\n            },] },\n];\n/**\n * @nocollapse\n */\nSlideshowModule.ctorParameters = () => [];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SlideshowModule, SlideshowComponent as ɵa, SwipeService as ɵb };\n//# sourceMappingURL=ng-simple-slideshow.js.map\n"]}