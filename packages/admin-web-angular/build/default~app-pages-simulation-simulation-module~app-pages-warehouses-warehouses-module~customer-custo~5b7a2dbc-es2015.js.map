{"version":3,"sources":["./src/app/@shared/payment-gateways/payPal-gateway/payPal-gateway.component.html","./src/app/@shared/payment-gateways/payment-gateways.component.html","./src/app/@shared/payment-gateways/stripe-gateway/stripe-gateway.component.html","../common/src/entities/Admin.ts","../common/src/entities/Currency.ts","../common/src/entities/index.ts","./src/app/@core/data/currencies.service.ts","./src/app/@shared/payment-gateways/payPal-gateway/payPal-gateway.component.ts","./src/app/@shared/payment-gateways/payment-gateways.component.ts","./src/app/@shared/payment-gateways/payment-gateways.module.ts","./src/app/@shared/payment-gateways/stripe-gateway/stripe-gateway.component.ts"],"names":[],"mappings":"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","file":"default~app-pages-simulation-simulation-module~app-pages-warehouses-warehouses-module~customer-custo~5b7a2dbc-es2015.js","sourcesContent":["export default \"<div class=\\\"row m-0\\\">\\n\\t<div class=\\\"form-group col-md-12 p-0\\\">\\n\\t\\t<nb-checkbox [(ngModel)]=\\\"isPayPalEnabled\\\">\\n\\t\\t\\t<img src=\\\"{{ logo }}\\\" width=\\\"20px\\\" alt=\\\"\\\" />\\n\\t\\t\\t{{ name }}\\n\\t\\t</nb-checkbox>\\n\\t</div>\\n</div>\\n\\n<form [hidden]=\\\"!isPayPalEnabled\\\" #payPalConfigForm=\\\"ngForm\\\">\\n\\t<div class=\\\"row m-0\\\">\\n\\t\\t<div class=\\\"form-group col-md-6\\\">\\n\\t\\t\\t<label for=\\\"mode\\\">\\n\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.PAYPAL.MODE' | translate\\n\\t\\t\\t\\t}}\\n\\t\\t\\t</label>\\n\\t\\t\\t<select\\n\\t\\t\\t\\t#mode=\\\"ngModel\\\"\\n\\t\\t\\t\\tname=\\\"mode\\\"\\n\\t\\t\\t\\t[(ngModel)]=\\\"configModel.mode\\\"\\n\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\trequired\\n\\t\\t\\t>\\n\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>{{\\n\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.PAYPAL.CHOOSE_PAYPAL_MODE'\\n\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t}}</option>\\n\\t\\t\\t\\t<option *ngFor=\\\"let type of payPalTypes\\\" value=\\\"{{ type }}\\\">\\n\\t\\t\\t\\t\\t{{ type }}\\n\\t\\t\\t\\t</option>\\n\\t\\t\\t</select>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"form-group col-md-6\\\">\\n\\t\\t\\t<label for=\\\"currency\\\">\\n\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.PAYPAL.CURRENCY'\\n\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t}}\\n\\t\\t\\t</label>\\n\\t\\t\\t<select\\n\\t\\t\\t\\t#currency=\\\"ngModel\\\"\\n\\t\\t\\t\\tname=\\\"currency\\\"\\n\\t\\t\\t\\t[(ngModel)]=\\\"configModel.currency\\\"\\n\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\trequired\\n\\t\\t\\t>\\n\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>{{\\n\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.PAYPAL.CHOOSE_CURRENCY_CODE'\\n\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t}}</option>\\n\\t\\t\\t\\t<option\\n\\t\\t\\t\\t\\t*ngFor=\\\"let code of currenciesCodes\\\"\\n\\t\\t\\t\\t\\tvalue=\\\"{{ code }}\\\"\\n\\t\\t\\t\\t\\t>{{ code }}</option\\n\\t\\t\\t\\t>\\n\\t\\t\\t</select>\\n\\t\\t\\t<small\\n\\t\\t\\t\\tclass=\\\"text-danger\\\"\\n\\t\\t\\t\\t*ngIf=\\\"currency.invalid && (currency.dirty || currency.touched)\\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t<span *ngIf=\\\"currency.errors.required\\\">\\n\\t\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.PAYPAL.CURRENCY_TEXT_IS_REQUIRED'\\n\\t\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</small>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"row m-0\\\">\\n\\t\\t<div class=\\\"form-group col-md-12\\\">\\n\\t\\t\\t<label for=\\\"publishableKey\\\">\\n\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.PAYPAL.PUBLISHABLE_KEY'\\n\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t}}\\n\\t\\t\\t</label>\\n\\t\\t\\t<input\\n\\t\\t\\t\\tnbInput\\n\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\tid=\\\"publishableKey\\\"\\n\\t\\t\\t\\tname=\\\"publishable-key\\\"\\n\\t\\t\\t\\tplaceholder=\\\"{{\\n\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.PAYPAL.PUBLISHABLE_KEY'\\n\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t}}\\\"\\n\\t\\t\\t\\t[(ngModel)]=\\\"configModel.publishableKey\\\"\\n\\t\\t\\t\\t#publishableKey=\\\"ngModel\\\"\\n\\t\\t\\t\\t[ngClass]=\\\"{\\n\\t\\t\\t\\t\\t'input-danger':\\n\\t\\t\\t\\t\\t\\tpublishableKey.invalid &&\\n\\t\\t\\t\\t\\t\\t(publishableKey.dirty || publishableKey.touched),\\n\\t\\t\\t\\t\\t'input-success':\\n\\t\\t\\t\\t\\t\\tpublishableKey.valid &&\\n\\t\\t\\t\\t\\t\\t(publishableKey.dirty || publishableKey.touched)\\n\\t\\t\\t\\t}\\\"\\n\\t\\t\\t\\trequired\\n\\t\\t\\t/>\\n\\t\\t\\t<small\\n\\t\\t\\t\\tclass=\\\"text-danger\\\"\\n\\t\\t\\t\\t*ngIf=\\\"\\n\\t\\t\\t\\t\\tpublishableKey.invalid &&\\n\\t\\t\\t\\t\\t(publishableKey.dirty || publishableKey.touched)\\n\\t\\t\\t\\t\\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t<span *ngIf=\\\"publishableKey.errors.required\\\">\\n\\t\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.PAYPAL.PUBLISHABLE_KEY_IS_REQUIRED'\\n\\t\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</small>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"row m-0\\\">\\n\\t\\t<div class=\\\"form-group col-md-12\\\">\\n\\t\\t\\t<label for=\\\"secretKey\\\">\\n\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.PAYPAL.SECRET_KEY'\\n\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t}}\\n\\t\\t\\t</label>\\n\\t\\t\\t<input\\n\\t\\t\\t\\tnbInput\\n\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\tid=\\\"secretKey\\\"\\n\\t\\t\\t\\tname=\\\"secret-key\\\"\\n\\t\\t\\t\\tplaceholder=\\\"{{\\n\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.PAYPAL.SECRET_KEY'\\n\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t}}\\\"\\n\\t\\t\\t\\t[(ngModel)]=\\\"configModel.secretKey\\\"\\n\\t\\t\\t\\t#secretKey=\\\"ngModel\\\"\\n\\t\\t\\t\\t[ngClass]=\\\"{\\n\\t\\t\\t\\t\\t'input-danger':\\n\\t\\t\\t\\t\\t\\tsecretKey.invalid &&\\n\\t\\t\\t\\t\\t\\t(secretKey.dirty || secretKey.touched),\\n\\t\\t\\t\\t\\t'input-success':\\n\\t\\t\\t\\t\\t\\tsecretKey.valid &&\\n\\t\\t\\t\\t\\t\\t(secretKey.dirty || secretKey.touched)\\n\\t\\t\\t\\t}\\\"\\n\\t\\t\\t\\trequired\\n\\t\\t\\t/>\\n\\t\\t\\t<small\\n\\t\\t\\t\\tclass=\\\"text-danger\\\"\\n\\t\\t\\t\\t*ngIf=\\\"\\n\\t\\t\\t\\t\\tsecretKey.invalid && (secretKey.dirty || secretKey.touched)\\n\\t\\t\\t\\t\\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t<span *ngIf=\\\"secretKey.errors.required\\\">\\n\\t\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.PAYPAL.SECRET_KEY_IS_REQUIRED'\\n\\t\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</small>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"row m-0\\\">\\n\\t\\t<div class=\\\"form-group col-md-12\\\">\\n\\t\\t\\t<label for=\\\"description\\\">\\n\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.PAYPAL.PAYMENT_DESCRIPTION'\\n\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t}}\\n\\t\\t\\t</label>\\n\\t\\t\\t<input\\n\\t\\t\\t\\tnbInput\\n\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\tid=\\\"description\\\"\\n\\t\\t\\t\\tname=\\\"description\\\"\\n\\t\\t\\t\\tplaceholder=\\\"{{\\n\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.PAYPAL.PAYMENT_DESCRIPTION'\\n\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t}}\\\"\\n\\t\\t\\t\\t[(ngModel)]=\\\"configModel.description\\\"\\n\\t\\t\\t\\t#description=\\\"ngModel\\\"\\n\\t\\t\\t\\t[ngClass]=\\\"{\\n\\t\\t\\t\\t\\t'input-danger':\\n\\t\\t\\t\\t\\t\\tdescription.invalid &&\\n\\t\\t\\t\\t\\t\\t(description.dirty || description.touched),\\n\\t\\t\\t\\t\\t'input-success':\\n\\t\\t\\t\\t\\t\\tdescription.valid &&\\n\\t\\t\\t\\t\\t\\t(description.dirty || description.touched)\\n\\t\\t\\t\\t}\\\"\\n\\t\\t\\t\\trequired\\n\\t\\t\\t/>\\n\\t\\t\\t<small\\n\\t\\t\\t\\tclass=\\\"text-danger\\\"\\n\\t\\t\\t\\t*ngIf=\\\"\\n\\t\\t\\t\\t\\tdescription.invalid &&\\n\\t\\t\\t\\t\\t(description.dirty || description.touched)\\n\\t\\t\\t\\t\\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t<span *ngIf=\\\"description.errors.required\\\">\\n\\t\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.PAYPAL.PAYMENT_DESCRIPTION_IS_REQUIRED'\\n\\t\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</small>\\n\\t\\t</div>\\n\\t</div>\\n</form>\\n\"","export default \"<ea-stripe-gateway\\n\\t#stripeGateway\\n\\t[currenciesCodes]=\\\"currenciesCodes\\\"\\n\\t[companyBrandLogo]=\\\"warehouseLogo\\\"\\n></ea-stripe-gateway>\\n<ea-payPal-gateway\\n\\t#payPalGateway\\n\\t[currenciesCodes]=\\\"currenciesCodes\\\"\\n></ea-payPal-gateway>\\n\"","export default \"<div class=\\\"row m-0\\\">\\n\\t<div class=\\\"form-group col-md-12 p-0\\\">\\n\\t\\t<nb-checkbox [(ngModel)]=\\\"isStripeEnabled\\\">\\n\\t\\t\\t<img src=\\\"{{ logo }}\\\" width=\\\"20px\\\" alt=\\\"\\\" />\\n\\t\\t\\t{{ name }}\\n\\t\\t</nb-checkbox>\\n\\t</div>\\n</div>\\n\\n<form [hidden]=\\\"!isStripeEnabled\\\" #stripeConfigForm=\\\"ngForm\\\">\\n\\t<div class=\\\"row m-0\\\">\\n\\t\\t<div class=\\\"form-group col-md-6\\\">\\n\\t\\t\\t<label for=\\\"payButtontext\\\">\\n\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.STRIPE.PAY_BUTTON_TEXT'\\n\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t}}\\n\\t\\t\\t</label>\\n\\t\\t\\t<input\\n\\t\\t\\t\\tnbInput\\n\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\tid=\\\"payButtontext\\\"\\n\\t\\t\\t\\tname=\\\"pay-button-text\\\"\\n\\t\\t\\t\\tplaceholder=\\\"{{\\n\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.STRIPE.PAY_BUTTON_TEXT'\\n\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t}}\\\"\\n\\t\\t\\t\\t[(ngModel)]=\\\"configModel.payButtontext\\\"\\n\\t\\t\\t\\t#payButtontext=\\\"ngModel\\\"\\n\\t\\t\\t\\t[ngClass]=\\\"{\\n\\t\\t\\t\\t\\t'input-danger':\\n\\t\\t\\t\\t\\t\\tpayButtontext.invalid &&\\n\\t\\t\\t\\t\\t\\t(payButtontext.dirty || payButtontext.touched),\\n\\t\\t\\t\\t\\t'input-success':\\n\\t\\t\\t\\t\\t\\tpayButtontext.valid &&\\n\\t\\t\\t\\t\\t\\t(payButtontext.dirty || payButtontext.touched)\\n\\t\\t\\t\\t}\\\"\\n\\t\\t\\t\\trequired\\n\\t\\t\\t/>\\n\\t\\t\\t<small\\n\\t\\t\\t\\tclass=\\\"text-danger\\\"\\n\\t\\t\\t\\t*ngIf=\\\"\\n\\t\\t\\t\\t\\tpayButtontext.invalid &&\\n\\t\\t\\t\\t\\t(payButtontext.dirty || payButtontext.touched)\\n\\t\\t\\t\\t\\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t<span *ngIf=\\\"payButtontext.errors.required\\\">\\n\\t\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.STRIPE.PAY_BUTTON_TEXT_IS_REQUIRED'\\n\\t\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</small>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"form-group col-md-6\\\">\\n\\t\\t\\t<label for=\\\"currency\\\">\\n\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.STRIPE.CURRENCY'\\n\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t}}\\n\\t\\t\\t</label>\\n\\t\\t\\t<select\\n\\t\\t\\t\\t#currency=\\\"ngModel\\\"\\n\\t\\t\\t\\tname=\\\"currency\\\"\\n\\t\\t\\t\\t[(ngModel)]=\\\"configModel.currency\\\"\\n\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\trequired\\n\\t\\t\\t>\\n\\t\\t\\t\\t<option value=\\\"\\\" disabled selected hidden>\\n\\t\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.STRIPE.CHOOSE_CURRENCY_CODE'\\n\\t\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t\\t}}</option\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t<option\\n\\t\\t\\t\\t\\t*ngFor=\\\"let code of currenciesCodes\\\"\\n\\t\\t\\t\\t\\tvalue=\\\"{{ code }}\\\"\\n\\t\\t\\t\\t\\t>{{ code }}</option\\n\\t\\t\\t\\t>\\n\\t\\t\\t</select>\\n\\t\\t\\t<small\\n\\t\\t\\t\\tclass=\\\"text-danger\\\"\\n\\t\\t\\t\\t*ngIf=\\\"currency.invalid && (currency.dirty || currency.touched)\\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t<span *ngIf=\\\"currency.errors.required\\\">\\n\\t\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.STRIPE.CURRENCY_TEXT_IS_REQUIRED'\\n\\t\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</small>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"row mt-0 mr-0 ml-0 form-group\\\">\\n\\t\\t<div class=\\\"col-md-12\\\">\\n\\t\\t\\t<label for=\\\"logo\\\">\\n\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.STRIPE.CURRENCY_TEXT_IS_REQUIRED'\\n\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t}}\\n\\t\\t\\t</label>\\n\\t\\t\\t<e-cu-file-uploader\\n\\t\\t\\t\\t#fileUploader\\n\\t\\t\\t\\t[placeholder]=\\\"COMPANY_BRAND_LOGO\\\"\\n\\t\\t\\t\\t[fileUrl]=\\\"configModel.companyBrandLogo\\\"\\n\\t\\t\\t\\t(uploadedImgUrl)=\\\"configModel.companyBrandLogo = $event\\\"\\n\\t\\t\\t\\t[customClass]=\\\"\\n\\t\\t\\t\\t\\tfileUploader.shownInput.dirty ||\\n\\t\\t\\t\\t\\tfileUploader.shownInput.touched ||\\n\\t\\t\\t\\t\\tconfigModel.companyBrandLogo !== ''\\n\\t\\t\\t\\t\\t\\t? invalidUrl || configModel.companyBrandLogo === ''\\n\\t\\t\\t\\t\\t\\t\\t? 'form-control-danger'\\n\\t\\t\\t\\t\\t\\t\\t: 'form-control-success'\\n\\t\\t\\t\\t\\t\\t: ''\\n\\t\\t\\t\\t\\\"\\n\\t\\t\\t></e-cu-file-uploader>\\n\\n\\t\\t\\t<small\\n\\t\\t\\t\\tclass=\\\"text-danger\\\"\\n\\t\\t\\t\\t*ngIf=\\\"\\n\\t\\t\\t\\t\\tfileUploader.shownInput.dirty ||\\n\\t\\t\\t\\t\\tfileUploader.shownInput.touched\\n\\t\\t\\t\\t\\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t<span *ngIf=\\\"configModel.companyBrandLogo === ''\\\">\\n\\t\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.STRIPE.COMPANY_BRAND_LOGO_IS_REQUIRED'\\n\\t\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t</span>\\n\\n\\t\\t\\t\\t<span *ngIf=\\\"invalidUrl && configModel.companyBrandLogo !== ''\\\">\\n\\t\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.STRIPE.INVALID_LOGO_URL'\\n\\t\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</small>\\n\\t\\t</div>\\n\\n\\t\\t<div\\n\\t\\t\\tclass=\\\"col-md-8 preview-img-container\\\"\\n\\t\\t\\t[hidden]=\\\"configModel.companyBrandLogo === '' || invalidUrl\\\"\\n\\t\\t>\\n\\t\\t\\t<div class=\\\"col-sm-10\\\">\\n\\t\\t\\t\\t<div class=\\\"row preview-img\\\">\\n\\t\\t\\t\\t\\t<img\\n\\t\\t\\t\\t\\t\\tsrc=\\\"{{ configModel.companyBrandLogo }}\\\"\\n\\t\\t\\t\\t\\t\\talt=\\\"Invalid logo\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"img-rounded\\\"\\n\\t\\t\\t\\t\\t\\t(error)=\\\"invalidUrl = true\\\"\\n\\t\\t\\t\\t\\t\\t(load)=\\\"invalidUrl = false\\\"\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t<div class=\\\"remove-icon\\\" (click)=\\\"deleteImg()\\\">\\n\\t\\t\\t\\t\\t\\t<span\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"ion-md-remove-circle text-danger pl-2\\\"\\n\\t\\t\\t\\t\\t\\t\\ttitle=\\\"{{\\n\\t\\t\\t\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.STRIPE.REMOVE'\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t\\t\\t\\t}}\\\"\\n\\t\\t\\t\\t\\t\\t></span>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"row m-0\\\">\\n\\t\\t<div class=\\\"form-group col-md-12\\\">\\n\\t\\t\\t<label for=\\\"publishableKey\\\">\\n\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.STRIPE.PUBLISHABLE_KEY'\\n\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t}}\\n\\t\\t\\t</label>\\n\\t\\t\\t<input\\n\\t\\t\\t\\tnbInput\\n\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\tid=\\\"publishableKey\\\"\\n\\t\\t\\t\\tname=\\\"publishable-key\\\"\\n\\t\\t\\t\\tplaceholder=\\\"{{\\n\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.STRIPE.PUBLISHABLE_KEY'\\n\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t}}\\\"\\n\\t\\t\\t\\t[(ngModel)]=\\\"configModel.publishableKey\\\"\\n\\t\\t\\t\\t#publishableKey=\\\"ngModel\\\"\\n\\t\\t\\t\\t[ngClass]=\\\"{\\n\\t\\t\\t\\t\\t'input-danger':\\n\\t\\t\\t\\t\\t\\tpublishableKey.invalid &&\\n\\t\\t\\t\\t\\t\\t(publishableKey.dirty || publishableKey.touched),\\n\\t\\t\\t\\t\\t'input-success':\\n\\t\\t\\t\\t\\t\\tpublishableKey.valid &&\\n\\t\\t\\t\\t\\t\\t(publishableKey.dirty || publishableKey.touched)\\n\\t\\t\\t\\t}\\\"\\n\\t\\t\\t\\trequired\\n\\t\\t\\t/>\\n\\t\\t\\t<small\\n\\t\\t\\t\\tclass=\\\"text-danger\\\"\\n\\t\\t\\t\\t*ngIf=\\\"\\n\\t\\t\\t\\t\\tpublishableKey.invalid &&\\n\\t\\t\\t\\t\\t(publishableKey.dirty || publishableKey.touched)\\n\\t\\t\\t\\t\\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t<span *ngIf=\\\"publishableKey.errors.required\\\">\\n\\t\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.STRIPE.PUBLISHABLE_KEY_IS_REQUIRED'\\n\\t\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</small>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"row m-0\\\">\\n\\t\\t<div class=\\\"form-group col-md-8\\\">\\n\\t\\t\\t<nb-checkbox\\n\\t\\t\\t\\tname=\\\"remember-me\\\"\\n\\t\\t\\t\\t[(ngModel)]=\\\"configModel.allowRememberMe\\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\t{{\\n\\t\\t\\t\\t\\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.STRIPE.ALLOW_REMEMBER_ME'\\n\\t\\t\\t\\t\\t\\t| translate\\n\\t\\t\\t\\t}}\\n\\t\\t\\t</nb-checkbox>\\n\\t\\t</div>\\n\\t</div>\\n</form>\\n\"","import { DBObject, ModelName } from '../@pyro/db';\nimport IAdmin, { IAdminCreateObject } from '../interfaces/IAdmin';\nimport { Schema, Types } from '@pyro/db';\nimport { Entity, Column } from 'typeorm';\n\n/**\n * Registered Admin Users (e.g. Administrators)\n * TODO: will be renamed to \"Users\" (after we rename \"Users\" to \"Customers\")\n * Note: not related to Customers!\n *\n * @class Admin\n * @extends {DBObject<IAdmin, IAdminCreateObject>}\n * @implements {IAdmin}\n */\n@ModelName('Admin')\n@Entity({ name: 'admins' })\nclass Admin extends DBObject<IAdmin, IAdminCreateObject> implements IAdmin {\n\t/**\n\t * User Email\n\t *\n\t * @type {string}\n\t * @memberof Admin\n\t */\n\t@Schema({ type: String, unique: true })\n\t@Types.String()\n\t@Column()\n\temail: string;\n\n\t/**\n\t * Username\n\t *\n\t * @type {string}\n\t * @memberof Admin\n\t */\n\t@Types.String()\n\t@Column()\n\tname: string;\n\n\t/**\n\t * Password hash\n\t *\n\t * @type {string}\n\t * @memberof Admin\n\t */\n\t@Schema({ type: String, select: false })\n\t@Types.String()\n\t@Column()\n\thash: string;\n\n\t/**\n\t * User Picture (Avatar) Url\n\t *\n\t * @type {string}\n\t * @memberof Admin\n\t */\n\t@Types.String()\n\t@Column()\n\tpictureUrl: string;\n\n\t/**\n\t * Is User Removed (Deleted)\n\t *\n\t * @type {boolean}\n\t * @memberof Admin\n\t */\n\t@Types.Boolean(false)\n\t@Column()\n\tisDeleted: boolean;\n\n\t/**\n\t * User First Name\n\t *\n\t * @type {string}\n\t * @memberof Admin\n\t */\n\t@Schema({\n\t\ttype: String,\n\t\trequired: false,\n\t\tvalidate: new RegExp(`^[a-z ,.'-]+$`, 'i'),\n\t})\n\t@Column()\n\tfirstName?: string;\n\n\t/**\n\t * User Last Name\n\t *\n\t * @type {string}\n\t * @memberof Admin\n\t */\n\t@Schema({\n\t\ttype: String,\n\t\trequired: false,\n\t\tvalidate: new RegExp(`^[a-z ,.'-]+$`, 'i'),\n\t})\n\t@Column()\n\tlastName?: string;\n}\n\nexport default Admin;\n","import { ModelName, DBObject, Types, Schema } from '@pyro/db';\nimport { Entity, Column } from 'typeorm';\nimport ICurrency, { ICurrencyCreateObject } from '../interfaces/ICurrency';\n\n/**\n * @class Currency\n * @extends {DBObject<ICurrency, ICurrencyCreateObject>}\n * @implements {ICurrency}\n */\n@ModelName('Currency')\n@Entity({ name: 'currencies' })\nclass Currency extends DBObject<ICurrency, ICurrencyCreateObject>\n\timplements ICurrency {\n\t/**\n\t * Currency Code\n\t *\n\t * @type {string}\n\t * @memberof Currency\n\t */\n\t@Schema({ type: String, unique: true })\n\t@Column()\n\tcurrencyCode: string;\n\n\t/**\n\t * Is Currency removed completely from the system\n\t *\n\t * @type {boolean}\n\t * @memberof Currency\n\t */\n\t@Types.Boolean(false)\n\t@Column()\n\tisDeleted: boolean;\n}\n\nexport default Currency;\n\nexport const countriesDefaultCurrencies = {\n\tIL: 'ILS',\n\tRU: 'RUB',\n\tUS: 'USD',\n\tBG: 'BGN',\n};\n","export * from './Admin';\nexport * from './Carrier';\nexport * from './Device';\nexport * from './GeoLocation';\nexport * from './Invite';\nexport * from './InviteRequest';\nexport * from './Order';\nexport * from './OrderProduct';\nexport * from './Product';\nexport * from './ProductInfo';\nexport * from './ProductsCategory';\nexport * from './User';\nexport * from './UserOrder';\nexport * from './Warehouse';\nexport * from './WarehouseProduct';\n","import { Injectable } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport { Observable } from 'rxjs';\nimport Currency from '@modules/server.common/entities/Currency';\nimport gql from 'graphql-tag';\nimport { map, share } from 'rxjs/operators';\n\nexport interface CurrencyMutationRespone {\n\tsuccess: boolean;\n\tmessage?: string;\n\tdata?: Currency;\n}\n\n@Injectable()\nexport class CurrenciesService {\n\tconstructor(private readonly apollo: Apollo) {}\n\n\tprivate currencies$: Observable<Currency[]> = this.apollo\n\t\t.watchQuery<{ currencies: Currency[] }>({\n\t\t\tquery: gql`\n\t\t\t\tquery allCurrencies {\n\t\t\t\t\tcurrencies {\n\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t`,\n\t\t\tpollInterval: 2000,\n\t\t})\n\t\t.valueChanges.pipe(\n\t\t\tmap((result) => result.data.currencies),\n\t\t\tshare()\n\t\t);\n\n\tgetCurrencies(): Observable<Currency[]> {\n\t\treturn this.currencies$;\n\t}\n\n\tcreate(createInput: {\n\t\tcurrencyCode: string;\n\t}): Observable<CurrencyMutationRespone> {\n\t\treturn this.apollo\n\t\t\t.mutate<{ createCurrency: CurrencyMutationRespone }>({\n\t\t\t\tmutation: gql`\n\t\t\t\t\tmutation CreateCurrency(\n\t\t\t\t\t\t$createInput: CurrencyCreateInput!\n\t\t\t\t\t) {\n\t\t\t\t\t\tcreateCurrency(createInput: $createInput) {\n\t\t\t\t\t\t\tsuccess\n\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\tdata {\n\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t`,\n\t\t\t\tvariables: {\n\t\t\t\t\tcreateInput,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tmap((result) => result.data.createCurrency),\n\t\t\t\tshare()\n\t\t\t);\n\t}\n}\n","import { Component, Input, ViewChild } from '@angular/core';\nimport PaymentGateways, {\n\tpaymentGatewaysToString,\n\tpaymentGatewaysLogo,\n} from '@modules/server.common/enums/PaymentGateways';\nimport { Country } from '@modules/server.common/entities';\nimport { NgForm } from '@angular/forms';\nimport IPaymentGatewayCreateObject from '@modules/server.common/interfaces/IPaymentGateway';\n\n@Component({\n\tselector: 'ea-payPal-gateway',\n\ttemplateUrl: './payPal-gateway.component.html',\n})\nexport class PayPalGatewayComponent {\n\t@ViewChild('payPalConfigForm', { static: true })\n\tpayPalConfigForm: NgForm;\n\n\tisPayPalEnabled: boolean;\n\tname = paymentGatewaysToString(PaymentGateways.PayPal);\n\tlogo = paymentGatewaysLogo(PaymentGateways.PayPal);\n\n\t@Input()\n\tcurrenciesCodes: string[] = [];\n\t@Input()\n\twarehouseCountry: Country;\n\n\tconfigModel = {\n\t\tcurrency: '',\n\t\tmode: '',\n\t\tpublishableKey: '',\n\t\tsecretKey: '',\n\t\tdescription: '',\n\t};\n\n\tpayPalTypes = ['sandbox', 'live'];\n\n\tget isFormValid(): boolean {\n\t\tlet isValid = false;\n\n\t\tif (this.payPalConfigForm) {\n\t\t\tisValid =\n\t\t\t\t(this.payPalConfigForm.touched ||\n\t\t\t\t\tthis.payPalConfigForm.dirty) &&\n\t\t\t\tthis.payPalConfigForm.valid;\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tget createObject(): IPaymentGatewayCreateObject | null {\n\t\tif (!this.isFormValid || !this.isPayPalEnabled) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tpaymentGateway: PaymentGateways.PayPal,\n\t\t\tconfigureObject: this.configModel,\n\t\t};\n\t}\n\n\tsetValue(data) {\n\t\tthis.isPayPalEnabled = true;\n\t\tthis.configModel.currency = data['currency'] || '';\n\t\tthis.configModel.mode = data['mode'] || '';\n\t\tthis.configModel.publishableKey = data['publishableKey'] || '';\n\t\tthis.configModel.secretKey = data['secretKey'] || '';\n\t\tthis.configModel.description = data['description'] || '';\n\t}\n}\n","import { Component, Input, ViewChild, OnChanges } from '@angular/core';\nimport { Country } from '@modules/server.common/entities';\nimport { StripeGatewayComponent } from './stripe-gateway/stripe-gateway.component';\nimport { PayPalGatewayComponent } from './payPal-gateway/payPal-gateway.component';\nimport IPaymentGatewayCreateObject from '@modules/server.common/interfaces/IPaymentGateway';\nimport { CurrenciesService } from '@app/@core/data/currencies.service';\nimport { first } from 'rxjs/operators';\nimport Warehouse from '@modules/server.common/entities/Warehouse';\nimport PaymentGateways from '@modules/server.common/enums/PaymentGateways';\nimport { countriesDefaultCurrencies } from '@modules/server.common/entities/Currency';\n\n@Component({\n\tselector: 'ea-payment-gateways',\n\ttemplateUrl: './payment-gateways.component.html',\n})\nexport class PaymentGatewaysComponent implements OnChanges {\n\t@ViewChild('stripeGateway')\n\tstripeGateway: StripeGatewayComponent;\n\n\t@ViewChild('payPalGateway')\n\tpayPalGateway: PayPalGatewayComponent;\n\n\t@Input()\n\twarehouseLogo: string;\n\t@Input()\n\twarehouseCountry: Country;\n\t@Input()\n\tisEdit: boolean;\n\n\tcurrenciesCodes: string[] = [];\n\n\tconstructor(private currenciesService: CurrenciesService) {\n\t\tthis.loadCurrenciesCodes();\n\t}\n\n\tget isValid(): boolean {\n\t\tlet valid = false;\n\t\tif (\n\t\t\tthis.stripeGateway.isStripeEnabled ||\n\t\t\tthis.payPalGateway.isPayPalEnabled\n\t\t) {\n\t\t\tif (this.stripeGateway.isStripeEnabled) {\n\t\t\t\tvalid = this.stripeGateway.isFormValid;\n\n\t\t\t\tif (!valid) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.payPalGateway.isPayPalEnabled) {\n\t\t\t\tvalid = this.payPalGateway.isFormValid;\n\n\t\t\t\tif (!valid) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn valid;\n\t}\n\n\tget paymentsGateways(): IPaymentGatewayCreateObject[] {\n\t\tconst paymentsGateways = [];\n\n\t\tconst stripeGatewayCreateObject = this.stripeGateway.createObject;\n\t\tconst payPalGatewayCreateObject = this.payPalGateway.createObject;\n\n\t\tif (stripeGatewayCreateObject) {\n\t\t\tpaymentsGateways.push(stripeGatewayCreateObject);\n\t\t}\n\n\t\tif (payPalGatewayCreateObject) {\n\t\t\tpaymentsGateways.push(payPalGatewayCreateObject);\n\t\t}\n\n\t\treturn paymentsGateways;\n\t}\n\n\tngOnChanges(): void {\n\t\tconst merchantCountry = Country[this.warehouseCountry];\n\n\t\tif (merchantCountry) {\n\t\t\tconst defaultCurrency =\n\t\t\t\tcountriesDefaultCurrencies[merchantCountry.toString()] || '';\n\n\t\t\tif (\n\t\t\t\tthis.stripeGateway &&\n\t\t\t\t(!this.isEdit || !this.stripeGateway.configModel.currency)\n\t\t\t) {\n\t\t\t\tthis.stripeGateway.configModel.currency = defaultCurrency;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.payPalGateway &&\n\t\t\t\t(!this.isEdit || !this.payPalGateway.configModel.currency)\n\t\t\t) {\n\t\t\t\tthis.payPalGateway.configModel.currency = defaultCurrency;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async loadCurrenciesCodes() {\n\t\tconst res = await this.currenciesService\n\t\t\t.getCurrencies()\n\t\t\t.pipe(first())\n\t\t\t.toPromise();\n\n\t\tif (res) {\n\t\t\tthis.currenciesCodes = res.map((r) => r.currencyCode);\n\t\t}\n\t}\n\n\tsetValue(merchant: Warehouse) {\n\t\tif (merchant.paymentGateways) {\n\t\t\tconst stripeConfigObj = merchant.paymentGateways.find(\n\t\t\t\t(g) => g.paymentGateway === PaymentGateways.Stripe\n\t\t\t);\n\n\t\t\tif (stripeConfigObj) {\n\t\t\t\tthis.stripeGateway.setValue(stripeConfigObj.configureObject);\n\t\t\t}\n\n\t\t\tconst payPalConfigObj = merchant.paymentGateways.find(\n\t\t\t\t(g) => g.paymentGateway === PaymentGateways.PayPal\n\t\t\t);\n\n\t\t\tif (payPalConfigObj) {\n\t\t\t\tthis.payPalGateway.setValue(payPalConfigObj.configureObject);\n\t\t\t}\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { ThemeModule } from '@app/@theme';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PaymentGatewaysComponent } from './payment-gateways.component';\nimport { StripeGatewayComponent } from './stripe-gateway/stripe-gateway.component';\nimport { PayPalGatewayComponent } from './payPal-gateway/payPal-gateway.component';\nimport { FileUploaderModule } from '@app/@shared/file-uploader/file-uploader.module';\nimport { CurrenciesService } from '@app/@core/data/currencies.service';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tThemeModule,\n\t\tTranslateModule.forChild(),\n\t\tFileUploaderModule,\n\t],\n\tdeclarations: [\n\t\tPaymentGatewaysComponent,\n\t\tStripeGatewayComponent,\n\t\tPayPalGatewayComponent,\n\t],\n\texports: [PaymentGatewaysComponent],\n\tproviders: [CurrenciesService],\n})\nexport class PaymentGatewaysModule {}\n","import { Component, Input, OnChanges, ViewChild } from '@angular/core';\nimport PaymentGateways, {\n\tpaymentGatewaysToString,\n\tpaymentGatewaysLogo,\n} from '@modules/server.common/enums/PaymentGateways';\nimport { Country } from '@modules/server.common/entities';\nimport { NgForm } from '@angular/forms';\nimport IPaymentGatewayCreateObject from '@modules/server.common/interfaces/IPaymentGateway';\nimport { TranslateService } from '@ngx-translate/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n\tselector: 'ea-stripe-gateway',\n\ttemplateUrl: './stripe-gateway.component.html',\n})\nexport class StripeGatewayComponent {\n\t@ViewChild('stripeConfigForm', { static: true })\n\tstripeConfigForm: NgForm;\n\n\tisStripeEnabled: boolean;\n\tname = paymentGatewaysToString(PaymentGateways.Stripe);\n\tlogo = paymentGatewaysLogo(PaymentGateways.Stripe);\n\tinvalidUrl: boolean;\n\n\tprivate _ngDestroy$ = new Subject<void>();\n\n\tCOMPANY_BRAND_LOGO =\n\t\t'FAKE_DATA.SETUP_MERCHANTS.PAYMENTS.STRIPE.COMPANY_BRAND_LOGO';\n\n\t@Input()\n\tcurrenciesCodes: string[] = [];\n\t@Input()\n\twarehouseCountry: Country;\n\t@Input()\n\tset companyBrandLogo(logo: string) {\n\t\tif (!this.configModel.companyBrandLogo) {\n\t\t\tthis.configModel.companyBrandLogo = logo;\n\t\t}\n\t}\n\n\tconstructor(private translateService: TranslateService) {\n\t\t// https://github.com/ngx-translate/core/issues/835\n\t\t// see how to translate words in the component(.ts) file\n\n\t\ttranslateService\n\t\t\t.stream(this.COMPANY_BRAND_LOGO)\n\t\t\t.pipe(takeUntil(this._ngDestroy$))\n\t\t\t.subscribe((text: string) => {\n\t\t\t\tthis.COMPANY_BRAND_LOGO = text;\n\t\t\t});\n\t}\n\n\tconfigModel = {\n\t\tpayButtontext: '',\n\t\tcurrency: '',\n\t\tcompanyBrandLogo: '',\n\t\tpublishableKey: '',\n\t\tallowRememberMe: true,\n\t};\n\n\tget isFormValid(): boolean {\n\t\tlet isValid = false;\n\n\t\tif (this.stripeConfigForm) {\n\t\t\tisValid =\n\t\t\t\t(this.stripeConfigForm.touched ||\n\t\t\t\t\tthis.stripeConfigForm.dirty) &&\n\t\t\t\tthis.stripeConfigForm.valid &&\n\t\t\t\t!this.invalidUrl &&\n\t\t\t\tthis.configModel.companyBrandLogo !== '';\n\t\t}\n\n\t\treturn isValid;\n\t}\n\n\tget createObject(): IPaymentGatewayCreateObject | null {\n\t\tif (!this.isFormValid || !this.isStripeEnabled) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tpaymentGateway: PaymentGateways.Stripe,\n\t\t\tconfigureObject: this.configModel,\n\t\t};\n\t}\n\n\tdeleteImg() {\n\t\tthis.configModel.companyBrandLogo = '';\n\t}\n\n\tsetValue(data) {\n\t\tthis.isStripeEnabled = true;\n\t\tthis.configModel.payButtontext = data['payButtontext'] || '';\n\t\tthis.configModel.currency = data['currency'] || '';\n\t\tthis.configModel.companyBrandLogo = data['companyBrandLogo'] || '';\n\t\tthis.configModel.publishableKey = data['publishableKey'] || '';\n\t\tthis.configModel.allowRememberMe = data['allowRememberMe'];\n\t}\n\n\tngOnDestroy() {\n\t\tthis._ngDestroy$.next();\n\t\tthis._ngDestroy$.complete();\n\t}\n}\n"],"sourceRoot":"webpack:///"}